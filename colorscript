#!/usr/bin/env nu

let data_dirs = $env.XDG_DATA_DIRS?
  | default ""
  | split row ":"
  | where {is-not-empty}
  | uniq

let script_dirs = $data_dirs
  | each {path join "colorscript"}
  | where {path exists}
if ($script_dirs | is-empty) {
  print -e "No colorscript directory has been found in $XDG_DATA_DIRS"
  exit 1
}

def get-scripts []: nothing -> table<name: string, path: path> {
  $script_dirs
    | each {|dir| ls $dir}
    | flatten
    | where type == file
    | each {|entry| {name: ($entry.name | path basename), path: $entry.name}}
}

# A collection of terminal color scripts.
def main [
  --name  (-n): string # Run script with the given name.
  --index (-i): int    # Run script with the given index.
]: nothing -> string {
  let scripts = get-scripts
  if $name != null {
    exec ($scripts | where name == $name | $in.0.path)
  } else if $index != null {
    exec ($scripts | get $index | get path)
  } else {
    let index = random int ..(($scripts | length) - 1)
    exec ($scripts | get $index | get path)
  }
}

# Select script to run.
def "main select" []: nothing -> string {
  let scripts = get-scripts

  let choice = $scripts.name | input list
  if $choice == null {
    exit 1
  }

  exec ($scripts | where name == $choice | $in.0.path)
}

# List all available scripts.
def "main list" []: nothing -> list<string> {
  get-scripts | get name
}
